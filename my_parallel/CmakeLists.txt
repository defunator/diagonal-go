cmake_minimum_required(VERSION 3.15)

project(my_parallel)

add_definitions(-std=c++17)
set(CXX_FLAGS "-Wall")
set(CMAKE_CXX_FLAGS, "${CXX_FLAGS}")
add_compile_options(
  "-Wall" "-Wpedantic" "-Wextra" "-fno-omit-frame-pointer" "-fexceptions"
  "$<$<CONFIG:DEBUG>:-O0;-g3;-ggdb>"
)

find_package(TBB REQUIRED)

find_package(OpenMP REQUIRED)
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

set(CMAKE_BUILD_TYPE Debug)

set(
  HEADERS
  atomic_list.hpp
  fragment.hpp
  one_dim_point_tree.hpp
  point_tree.hpp
  plane.hpp
  optimizer_concurrent_queue.hpp
)
set(
  SOURCE
  atomic_list.cpp
  fragment.cpp
  one_dim_point_tree.cpp
  point_tree.cpp
  plane.cpp
  optimizer_concurrent_queue.cpp
)

add_library(my_parallel ${SOURCE} ${HEADERS})

target_include_directories(my_parallel PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(my_parallel PRIVATE OpenMP::OpenMP_CXX)
target_link_libraries(my_parallel PRIVATE TBB::tbb)

